/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 11:11:18 GMT 2018
 */

package com.landlord.api.dto;

import com.landlord.dto.ChatMessageDTO;
import com.landlord.dto.EstateDTO;
import com.landlord.dto.UserDTO;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Date;

import static org.junit.Assert.*;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChatMessageDTO_ESTest extends ChatMessageDTO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      UserDTO userDTO0 = mock(UserDTO.class, new ViolatedAssumptionAnswer());
      chatMessageDTO0.setSender(userDTO0);
      assertEquals(0, chatMessageDTO0.id);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      EstateDTO estateDTO0 = mock(EstateDTO.class, new ViolatedAssumptionAnswer());
      chatMessageDTO0.setEstate(estateDTO0);
      assertNull(chatMessageDTO0.getMessage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserDTO userDTO0 = mock(UserDTO.class, new ViolatedAssumptionAnswer());
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO("M$x~", (Date) null, (EstateDTO) null, userDTO0);
      chatMessageDTO0.setMessage((String) null);
      assertEquals(0, chatMessageDTO0.id);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      String string0 = chatMessageDTO0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserDTO userDTO0 = mock(UserDTO.class, new ViolatedAssumptionAnswer());
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO("M$x~", (Date) null, (EstateDTO) null, userDTO0);
      chatMessageDTO0.message = null;
      chatMessageDTO0.message = "";
      String string0 = chatMessageDTO0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      chatMessageDTO0.setId(1353);
      int int0 = chatMessageDTO0.getId();
      assertEquals(1353, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      EstateDTO estateDTO0 = mock(EstateDTO.class, new ViolatedAssumptionAnswer());
      UserDTO userDTO0 = mock(UserDTO.class, new ViolatedAssumptionAnswer());
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO("`_PDP:8", date0, estateDTO0, userDTO0);
      chatMessageDTO0.setId((-1589));
      int int0 = chatMessageDTO0.getId();
      assertEquals((-1589), chatMessageDTO0.id);
      assertEquals((-1589), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(date0).toString();
      chatMessageDTO0.setDate(date0);
      Date date1 = chatMessageDTO0.getDate();
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      EstateDTO estateDTO0 = chatMessageDTO0.getEstate();
      assertNull(estateDTO0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      UserDTO userDTO0 = chatMessageDTO0.getSender();
      assertNull(userDTO0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      int int0 = chatMessageDTO0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO();
      Date date0 = chatMessageDTO0.getDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      EstateDTO estateDTO0 = mock(EstateDTO.class, new ViolatedAssumptionAnswer());
      UserDTO userDTO0 = mock(UserDTO.class, new ViolatedAssumptionAnswer());
      ChatMessageDTO chatMessageDTO0 = new ChatMessageDTO("v(GA,X0p45", date0, estateDTO0, userDTO0);
      String string0 = chatMessageDTO0.getMessage();
      assertEquals("v(GA,X0p45", string0);
  }
}
