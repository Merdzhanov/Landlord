/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 11:08:11 GMT 2018
 */

package com.landlord.api.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.landlord.dto.UserDTO;
import com.landlord.models.base.UserType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserDTO_ESTest extends UserDTO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      UserType userType0 = UserType.LANDLORD;
      userDTO0.setUserType(userType0);
      assertNull(userDTO0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO(0, "", "", "", 1346.0F, userType0);
      assertEquals(1346.0F, userDTO0.rating, 0.01F);
      
      userDTO0.setRating(0.0F);
      assertEquals(0.0F, userDTO0.rating, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO(264, (String) null, (String) null, (String) null, 264, userType0);
      assertEquals(264, userDTO0.id);
      
      userDTO0.setId(0);
      assertEquals(0, userDTO0.id);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO((-805), "", "3(K{QSMJ2A7?\bw", "3(K{QSMJ2A7?\bw", (-805), userType0);
      userDTO0.getUserType();
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getFirstName());
      assertEquals((-805), userDTO0.id);
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getLastName());
      assertEquals((-805.0F), userDTO0.rating, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      userDTO0.setUserName("O~F12)00}EjX.F");
      String string0 = userDTO0.getUserName();
      assertEquals("O~F12)00}EjX.F", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO((-805), "", "3(K{QSMJ2A7?\bw", "3(K{QSMJ2A7?\bw", (-805), userType0);
      String string0 = userDTO0.getUserName();
      assertNotNull(string0);
      assertEquals((-805), userDTO0.id);
      assertEquals("", string0);
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getLastName());
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getFirstName());
      assertEquals((-805.0F), userDTO0.rating, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO(0, "", "", "", 1346.0F, userType0);
      float float0 = userDTO0.getRating();
      assertEquals(1346.0F, float0, 0.01F);
      assertEquals(0, userDTO0.id);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO((-805), "", "3(K{QSMJ2A7?\bw", "3(K{QSMJ2A7?\bw", (-805), userType0);
      float float0 = userDTO0.getRating();
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getLastName());
      assertEquals((-805.0F), float0, 0.01F);
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getFirstName());
      assertEquals((-805), userDTO0.id);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO((-805), "", "3(K{QSMJ2A7?\bw", "3(K{QSMJ2A7?\bw", (-805), userType0);
      String string0 = userDTO0.getLastName();
      assertEquals("3(K{QSMJ2A7?\bw", string0);
      assertEquals((-805), userDTO0.id);
      assertEquals((-805.0F), userDTO0.rating, 0.01F);
      assertNotNull(string0);
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      userDTO0.setLastName("");
      String string0 = userDTO0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserType userType0 = UserType.TENANT;
      UserDTO userDTO0 = new UserDTO(1, "", "", "a2lw89wx<H_FC1", 1, userType0);
      int int0 = userDTO0.getId();
      assertEquals(1.0F, userDTO0.rating, 0.01F);
      assertEquals(1, int0);
      assertEquals("a2lw89wx<H_FC1", userDTO0.getLastName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO((-805), "", "3(K{QSMJ2A7?\bw", "3(K{QSMJ2A7?\bw", (-805), userType0);
      int int0 = userDTO0.getId();
      assertEquals((-805), int0);
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getFirstName());
      assertEquals((-805.0F), userDTO0.rating, 0.01F);
      assertEquals("3(K{QSMJ2A7?\bw", userDTO0.getLastName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserType userType0 = UserType.TENANT;
      UserDTO userDTO0 = new UserDTO(1, "", "", "a2lw89wx<H_FC1", 1, userType0);
      assertEquals("", userDTO0.getFirstName());
      
      userDTO0.setFirstName("?b,@SCBxe}R4H!");
      userDTO0.getFirstName();
      assertEquals("?b,@SCBxe}R4H!", userDTO0.getFirstName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserType userType0 = UserType.LANDLORD;
      UserDTO userDTO0 = new UserDTO(0, "", "", "", 1346.0F, userType0);
      String string0 = userDTO0.getFirstName();
      assertNotNull(string0);
      assertEquals(0, userDTO0.id);
      assertEquals(1346.0F, userDTO0.rating, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      userDTO0.getUserType();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      String string0 = userDTO0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      float float0 = userDTO0.getRating();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      int int0 = userDTO0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      String string0 = userDTO0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserDTO userDTO0 = new UserDTO();
      String string0 = userDTO0.getFirstName();
      assertNull(string0);
  }
}
