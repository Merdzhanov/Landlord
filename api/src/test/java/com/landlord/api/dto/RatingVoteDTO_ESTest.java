/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 11:13:17 GMT 2018
 */

package com.landlord.api.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.landlord.dto.RatingVoteDTO;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RatingVoteDTO_ESTest extends RatingVoteDTO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      Date date0 = ratingVoteDTO0.getVotingDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      String string0 = ratingVoteDTO0.getVoterUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-2747));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "", "");
      String string0 = ratingVoteDTO0.getVoterUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO((Integer) null, (String) null, (String) null);
      String string0 = ratingVoteDTO0.getVotedForUserUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, ",C6", ",C6");
      ratingVoteDTO0.setVotedForUserUsername("");
      String string0 = ratingVoteDTO0.getVotedForUserUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      Integer integer0 = ratingVoteDTO0.getRatingVoted();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "com.landlord.dto.base.DTOModelBase", "n<vF)'/5^0vr;^I`");
      ratingVoteDTO0.getRatingVoted();
      assertEquals("n<vF)'/5^0vr;^I`", ratingVoteDTO0.getVotedForUserUsername());
      assertEquals("com.landlord.dto.base.DTOModelBase", ratingVoteDTO0.getVoterUsername());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1431);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "o^1n0!wP5", "o^1n0!wP5");
      ratingVoteDTO0.setRatingVoted((Integer) ratingVoteDTO0.id);
      Integer integer1 = ratingVoteDTO0.getRatingVoted();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      Integer integer0 = new Integer(563);
      ratingVoteDTO0.setRatingVoted(integer0);
      Integer integer1 = ratingVoteDTO0.getRatingVoted();
      assertEquals(563, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1073);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, ":NK$C{CC+V{ &44F=", "");
      ratingVoteDTO0.setId(1073);
      int int0 = ratingVoteDTO0.getId();
      assertEquals(1073, ratingVoteDTO0.id);
      assertEquals(1073, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(1431);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "o^1n0!wP5", "o^1n0!wP5");
      String string0 = ratingVoteDTO0.getVotedForUserUsername();
      assertEquals("o^1n0!wP5", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(1431);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "o^1n0!wP5", "o^1n0!wP5");
      int int0 = ratingVoteDTO0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1431);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "o^1n0!wP5", "o^1n0!wP5");
      ratingVoteDTO0.setVoterUsername("o^1n0!wP5");
      assertEquals(1431, (int)ratingVoteDTO0.getRatingVoted());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(1431);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "o^1n0!wP5", "o^1n0!wP5");
      Date date0 = ratingVoteDTO0.getVotingDate();
      ratingVoteDTO0.setVotingDate(date0);
      assertEquals(0, ratingVoteDTO0.id);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1431);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "o^1n0!wP5", "o^1n0!wP5");
      String string0 = ratingVoteDTO0.getVoterUsername();
      assertEquals("o^1n0!wP5", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      ratingVoteDTO0.setId((-1));
      int int0 = ratingVoteDTO0.getId();
      assertEquals((-1), int0);
  }
}
