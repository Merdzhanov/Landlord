/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:17:15 GMT 2018
 */

package com.landlord.api.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.landlord.dto.RatingVoteDTO;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RatingVoteDTO_ESTest extends RatingVoteDTO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "oGki", "oGki");
      Date date0 = ratingVoteDTO0.getVotingDate();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      ratingVoteDTO0.setVoterUsername("=NV{Gw$>61");
      String string0 = ratingVoteDTO0.getVoterUsername();
      assertEquals("=NV{Gw$>61", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      ratingVoteDTO0.setVoterUsername("");
      String string0 = ratingVoteDTO0.getVoterUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "oGki", "oGki");
      String string0 = ratingVoteDTO0.getVotedForUserUsername();
      assertEquals("oGki", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "", "");
      String string0 = ratingVoteDTO0.getVotedForUserUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      Integer integer0 = new Integer(1);
      ratingVoteDTO0.setRatingVoted(integer0);
      Integer integer1 = ratingVoteDTO0.getRatingVoted();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "oGki", "oGki");
      Integer integer1 = ratingVoteDTO0.getRatingVoted();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-1945));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "com.landlord.dto.base.DTOModelBase", "com.landlord.dto.base.DTOModelBase");
      ratingVoteDTO0.setId(407);
      int int0 = ratingVoteDTO0.getId();
      assertEquals(407, ratingVoteDTO0.id);
      assertEquals(407, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "oGki", "oGki");
      ratingVoteDTO0.setId((-1));
      int int0 = ratingVoteDTO0.getId();
      assertEquals((-1), ratingVoteDTO0.id);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      String string0 = ratingVoteDTO0.getVotedForUserUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      ratingVoteDTO0.setVotingDate((Date) null);
      assertEquals(0, ratingVoteDTO0.id);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "oGki", "oGki");
      int int0 = ratingVoteDTO0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      Integer integer0 = ratingVoteDTO0.getRatingVoted();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      Date date0 = ratingVoteDTO0.getVotingDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      ratingVoteDTO0.setRatingVoted((Integer) ratingVoteDTO0.id);
      Integer integer0 = ratingVoteDTO0.getRatingVoted();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO();
      String string0 = ratingVoteDTO0.getVoterUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      RatingVoteDTO ratingVoteDTO0 = new RatingVoteDTO(integer0, "oGki", "oGki");
      ratingVoteDTO0.setVotedForUserUsername("oGki");
      assertEquals((-1), (int)ratingVoteDTO0.getRatingVoted());
  }
}
