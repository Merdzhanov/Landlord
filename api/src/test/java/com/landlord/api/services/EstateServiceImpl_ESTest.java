/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:32:56 GMT 2018
 */

package com.landlord.api.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

import com.landlord.models.Estate;
import com.landlord.repositories.SqlEstatesRepositoryImpl;
import com.landlord.repositories.SqlGenericRepositoryImpl;
import com.landlord.repositories.base.EstatesRepository;
import com.landlord.services.EstateServiceImpl;
import com.landlord.services.GenericServiceImpl;
import com.landlord.services.base.GenericService;
import com.landlord.utils.ChatMessageMapperImpl;
import com.landlord.utils.EstateMapperImpl;
import com.landlord.utils.UserMapperImpl;
import javax.persistence.metamodel.EntityType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.hibernate.Session;
import org.hibernate.engine.spi.SessionFactoryImplementor;
import org.hibernate.jpa.graph.internal.EntityGraphImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EstateServiceImpl_ESTest extends EstateServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      ChatMessageMapperImpl chatMessageMapperImpl0 = new ChatMessageMapperImpl(userMapperImpl0);
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      SqlGenericRepositoryImpl<Object> sqlGenericRepositoryImpl0 = new SqlGenericRepositoryImpl<Object>();
      EntityType<String> entityType0 = (EntityType<String>) mock(EntityType.class, new ViolatedAssumptionAnswer());
      SessionFactoryImplementor sessionFactoryImplementor0 = mock(SessionFactoryImplementor.class, new ViolatedAssumptionAnswer());
      EntityGraphImpl<String> entityGraphImpl0 = new EntityGraphImpl<String>("F{", entityType0, sessionFactoryImplementor0);
      SessionFactoryImplementor sessionFactoryImplementor1 = entityGraphImpl0.getFactory();
      Injector.inject(sqlGenericRepositoryImpl0, (Class<?>) SqlGenericRepositoryImpl.class, "sessionFactory", (Object) sessionFactoryImplementor1);
      Injector.validateBean(sqlGenericRepositoryImpl0, (Class<?>) SqlGenericRepositoryImpl.class);
      GenericServiceImpl<Object> genericServiceImpl0 = new GenericServiceImpl<Object>(sqlGenericRepositoryImpl0);
      EstateServiceImpl estateServiceImpl0 = new EstateServiceImpl((EstatesRepository) null, estateMapperImpl0, genericServiceImpl0);
      Estate estate0 = new Estate();
      // Undeclared exception!
      try { 
        estateServiceImpl0.updateEstate(estate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.services.EstateServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlEstatesRepositoryImpl sqlEstatesRepositoryImpl0 = new SqlEstatesRepositoryImpl();
      EntityType<String> entityType0 = (EntityType<String>) mock(EntityType.class, new ViolatedAssumptionAnswer());
      SessionFactoryImplementor sessionFactoryImplementor0 = mock(SessionFactoryImplementor.class, new ViolatedAssumptionAnswer());
      doReturn((Session) null).when(sessionFactoryImplementor0).openSession();
      EntityGraphImpl<String> entityGraphImpl0 = new EntityGraphImpl<String>("G7h)5", entityType0, sessionFactoryImplementor0);
      SessionFactoryImplementor sessionFactoryImplementor1 = entityGraphImpl0.getFactory();
      Injector.inject(sqlEstatesRepositoryImpl0, (Class<?>) SqlEstatesRepositoryImpl.class, "sessionFactory", (Object) sessionFactoryImplementor1);
      Injector.validateBean(sqlEstatesRepositoryImpl0, (Class<?>) SqlEstatesRepositoryImpl.class);
      EstateServiceImpl estateServiceImpl0 = new EstateServiceImpl(sqlEstatesRepositoryImpl0, (EstateMapperImpl) null, (GenericService<Estate>) null);
      // Undeclared exception!
      try { 
        estateServiceImpl0.getEstatesByUser("G7h)5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.repositories.SqlEstatesRepositoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      ChatMessageMapperImpl chatMessageMapperImpl0 = new ChatMessageMapperImpl(userMapperImpl0);
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      SqlGenericRepositoryImpl<Object> sqlGenericRepositoryImpl0 = new SqlGenericRepositoryImpl<Object>();
      EntityType<String> entityType0 = (EntityType<String>) mock(EntityType.class, new ViolatedAssumptionAnswer());
      SessionFactoryImplementor sessionFactoryImplementor0 = mock(SessionFactoryImplementor.class, new ViolatedAssumptionAnswer());
      EntityGraphImpl<String> entityGraphImpl0 = new EntityGraphImpl<String>("com.landlord.services.EstateServiceImpl", entityType0, sessionFactoryImplementor0);
      SessionFactoryImplementor sessionFactoryImplementor1 = entityGraphImpl0.getFactory();
      Injector.inject(sqlGenericRepositoryImpl0, (Class<?>) SqlGenericRepositoryImpl.class, "sessionFactory", (Object) sessionFactoryImplementor1);
      Injector.validateBean(sqlGenericRepositoryImpl0, (Class<?>) SqlGenericRepositoryImpl.class);
      GenericServiceImpl<Object> genericServiceImpl0 = new GenericServiceImpl<Object>(sqlGenericRepositoryImpl0);
      EstateServiceImpl estateServiceImpl0 = new EstateServiceImpl((EstatesRepository) null, estateMapperImpl0, genericServiceImpl0);
      // Undeclared exception!
      try { 
        estateServiceImpl0.getEstateByID((-4308));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.services.EstateServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlEstatesRepositoryImpl sqlEstatesRepositoryImpl0 = new SqlEstatesRepositoryImpl();
      EntityType<String> entityType0 = (EntityType<String>) mock(EntityType.class, new ViolatedAssumptionAnswer());
      SessionFactoryImplementor sessionFactoryImplementor0 = mock(SessionFactoryImplementor.class, new ViolatedAssumptionAnswer());
      doReturn((Session) null).when(sessionFactoryImplementor0).openSession();
      EntityGraphImpl<String> entityGraphImpl0 = new EntityGraphImpl<String>("", entityType0, sessionFactoryImplementor0);
      SessionFactoryImplementor sessionFactoryImplementor1 = entityGraphImpl0.getFactory();
      Injector.inject(sqlEstatesRepositoryImpl0, (Class<?>) SqlEstatesRepositoryImpl.class, "sessionFactory", (Object) sessionFactoryImplementor1);
      Injector.validateBean(sqlEstatesRepositoryImpl0, (Class<?>) SqlEstatesRepositoryImpl.class);
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      ChatMessageMapperImpl chatMessageMapperImpl0 = new ChatMessageMapperImpl(userMapperImpl0);
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      EstateServiceImpl estateServiceImpl0 = new EstateServiceImpl(sqlEstatesRepositoryImpl0, estateMapperImpl0, (GenericService<Estate>) null);
      // Undeclared exception!
      try { 
        estateServiceImpl0.getEstateByID(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.landlord.repositories.SqlEstatesRepositoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlEstatesRepositoryImpl sqlEstatesRepositoryImpl0 = new SqlEstatesRepositoryImpl();
      EntityType<String> entityType0 = (EntityType<String>) mock(EntityType.class, new ViolatedAssumptionAnswer());
      SessionFactoryImplementor sessionFactoryImplementor0 = mock(SessionFactoryImplementor.class, new ViolatedAssumptionAnswer());
      doReturn((Session) null).when(sessionFactoryImplementor0).openSession();
      EntityGraphImpl<String> entityGraphImpl0 = new EntityGraphImpl<String>("", entityType0, sessionFactoryImplementor0);
      SessionFactoryImplementor sessionFactoryImplementor1 = entityGraphImpl0.getFactory();
      Injector.inject(sqlEstatesRepositoryImpl0, (Class<?>) SqlEstatesRepositoryImpl.class, "sessionFactory", (Object) sessionFactoryImplementor1);
      Injector.validateBean(sqlEstatesRepositoryImpl0, (Class<?>) SqlEstatesRepositoryImpl.class);
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      ChatMessageMapperImpl chatMessageMapperImpl0 = new ChatMessageMapperImpl(userMapperImpl0);
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      SqlGenericRepositoryImpl<Object> sqlGenericRepositoryImpl0 = new SqlGenericRepositoryImpl<Object>();
      Injector.inject(sqlGenericRepositoryImpl0, (Class<?>) SqlGenericRepositoryImpl.class, "sessionFactory", (Object) sessionFactoryImplementor1);
      Injector.validateBean(sqlGenericRepositoryImpl0, (Class<?>) SqlGenericRepositoryImpl.class);
      GenericServiceImpl<Object> genericServiceImpl0 = new GenericServiceImpl<Object>(sqlGenericRepositoryImpl0);
      EstateServiceImpl estateServiceImpl0 = new EstateServiceImpl(sqlEstatesRepositoryImpl0, estateMapperImpl0, genericServiceImpl0);
      Estate estate0 = new Estate();
      // Undeclared exception!
      try { 
        estateServiceImpl0.updateEstate(estate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.landlord.repositories.SqlEstatesRepositoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EstateServiceImpl estateServiceImpl0 = new EstateServiceImpl((EstatesRepository) null, (EstateMapperImpl) null, (GenericService<Estate>) null);
      // Undeclared exception!
      try { 
        estateServiceImpl0.getEstatesByUser("G7h)5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.services.EstateServiceImpl", e);
      }
  }
}
