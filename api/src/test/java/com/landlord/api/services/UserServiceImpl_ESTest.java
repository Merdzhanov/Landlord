/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:16:51 GMT 2018
 */

package com.landlord.api.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

import com.landlord.dto.UserDTO;
import com.landlord.models.User;
import com.landlord.repositories.base.UsersRepository;
import com.landlord.services.UserServiceImpl;
import com.landlord.utils.UserMapperImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserServiceImpl_ESTest extends UserServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UsersRepository usersRepository0 = mock(UsersRepository.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(usersRepository0).getByUserName(anyString());
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      doReturn((UserDTO) null).when(userMapperImpl0).map(any(User.class));
      UserServiceImpl userServiceImpl0 = new UserServiceImpl(usersRepository0, userMapperImpl0);
      UserDTO userDTO0 = userServiceImpl0.getDTOByUserName("");
      assertNull(userDTO0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UsersRepository usersRepository0 = mock(UsersRepository.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(usersRepository0).getByUserName(anyString());
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      UserServiceImpl userServiceImpl0 = new UserServiceImpl(usersRepository0, userMapperImpl0);
      User user0 = userServiceImpl0.getByUserName((String) null);
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UsersRepository usersRepository0 = mock(UsersRepository.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(usersRepository0).getByUserName(anyString());
      UserServiceImpl userServiceImpl0 = new UserServiceImpl(usersRepository0, (UserMapperImpl) null);
      // Undeclared exception!
      try { 
        userServiceImpl0.getDTOByUserName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.services.UserServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      UserServiceImpl userServiceImpl0 = new UserServiceImpl((UsersRepository) null, userMapperImpl0);
      // Undeclared exception!
      try { 
        userServiceImpl0.getByUserName("H!s$vRB3itEWVdm;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.services.UserServiceImpl", e);
      }
  }
}
