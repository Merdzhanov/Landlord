/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 11:16:36 GMT 2018
 */

package com.landlord.api.utils;

import com.landlord.dto.EstateDTO;
import com.landlord.models.Estate;
import com.landlord.models.User;
import com.landlord.utils.ChatMessageMapperImpl;
import com.landlord.utils.EstateMapperImpl;
import com.landlord.utils.UserMapperImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.List;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;
import static org.mockito.ArgumentMatchers.anyList;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EstateMapperImpl_ESTest extends EstateMapperImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[9];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      Estate estate0 = mock(Estate.class, new ViolatedAssumptionAnswer());
      doReturn("Y,Sc | =w*GRRPqSo+?").when(estate0).getAddress();
      doReturn("MKX4;mO?eq(m$2MGa").when(estate0).getDescription();
      doReturn(date0).when(estate0).getDueDate();
      doReturn(2638).when(estate0).getId();
      doReturn(byteArray0).when(estate0).getImage();
      doReturn("Y,Sc | =w*GRRPqSo+?").when(estate0).getImageUrl();
      doReturn(bigDecimal0).when(estate0).getMonthlyRent();
      doReturn("").when(estate0).getName();
      doReturn(bigDecimal0).when(estate0).getOwedAmount();
      doReturn((List<User>) null).when(estate0).getUsers();
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(userMapperImpl0).mapMany(anyList());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      EstateDTO estateDTO0 = estateMapperImpl0.map(estate0);
      assertEquals(0, estateDTO0.id);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      // Undeclared exception!
      try { 
        estateMapperImpl0.map((Estate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      // Undeclared exception!
      try { 
        estateMapperImpl0.mapMany((List<Estate>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(userMapperImpl0).mapMany(anyList());
      doReturn((List) null).when(userMapperImpl0).mapManyToModel(anyList());
      EstateDTO estateDTO0 = mock(EstateDTO.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(estateDTO0).getUsers();
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      Estate estate0 = estateMapperImpl0.map(estateDTO0);
      EstateDTO estateDTO1 = estateMapperImpl0.map(estate0);
      assertEquals(0, estateDTO1.id);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      // Undeclared exception!
      try { 
        estateMapperImpl0.mapManyToModel((List<EstateDTO>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      // Undeclared exception!
      try { 
        estateMapperImpl0.map((EstateDTO) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }
}
