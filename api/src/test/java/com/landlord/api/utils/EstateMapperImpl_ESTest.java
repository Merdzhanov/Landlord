/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:22:31 GMT 2018
 */

package com.landlord.api.utils;

import org.junit.Test;
import static org.junit.Assert.*;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.ArgumentMatchers.anyList;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

import com.landlord.dto.EstateDTO;
import com.landlord.models.Estate;
import com.landlord.utils.ChatMessageMapperImpl;
import com.landlord.utils.EstateMapperImpl;
import com.landlord.utils.UserMapperImpl;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EstateMapperImpl_ESTest extends EstateMapperImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(userMapperImpl0).mapMany(anyList());
      doReturn((List) null).when(userMapperImpl0).mapManyToModel(anyList());
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      Estate estate0 = mock(Estate.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(estate0).getAddress();
      doReturn((String) null).when(estate0).getDescription();
      doReturn((Date) null).when(estate0).getDueDate();
      doReturn(0).when(estate0).getId();
      doReturn((byte[]) null).when(estate0).getImage();
      doReturn((String) null).when(estate0).getImageUrl();
      doReturn((BigDecimal) null).when(estate0).getMonthlyRent();
      doReturn((String) null).when(estate0).getName();
      doReturn((BigDecimal) null).when(estate0).getOwedAmount();
      doReturn((List) null).when(estate0).getUsers();
      EstateDTO estateDTO0 = estateMapperImpl0.map(estate0);
      Estate estate1 = estateMapperImpl0.map(estateDTO0);
      assertEquals(0, estate1.getId());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl((UserMapperImpl) null, chatMessageMapperImpl0);
      Estate estate0 = mock(Estate.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(estate0).getAddress();
      doReturn((String) null).when(estate0).getDescription();
      doReturn((Date) null).when(estate0).getDueDate();
      doReturn(0).when(estate0).getId();
      doReturn((byte[]) null).when(estate0).getImage();
      doReturn((String) null).when(estate0).getImageUrl();
      doReturn((BigDecimal) null).when(estate0).getMonthlyRent();
      doReturn((String) null).when(estate0).getName();
      doReturn((BigDecimal) null).when(estate0).getOwedAmount();
      doReturn((List) null).when(estate0).getUsers();
      // Undeclared exception!
      try { 
        estateMapperImpl0.map(estate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, (ChatMessageMapperImpl) null);
      // Undeclared exception!
      try { 
        estateMapperImpl0.mapMany((List<Estate>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      // Undeclared exception!
      try { 
        estateMapperImpl0.mapManyToModel((List<EstateDTO>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = mock(UserMapperImpl.class, new ViolatedAssumptionAnswer());
      ChatMessageMapperImpl chatMessageMapperImpl0 = mock(ChatMessageMapperImpl.class, new ViolatedAssumptionAnswer());
      EstateMapperImpl estateMapperImpl0 = new EstateMapperImpl(userMapperImpl0, chatMessageMapperImpl0);
      // Undeclared exception!
      try { 
        estateMapperImpl0.map((EstateDTO) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.utils.EstateMapperImpl", e);
      }
  }
}
