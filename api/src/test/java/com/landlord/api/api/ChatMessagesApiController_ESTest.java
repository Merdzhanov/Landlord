/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:13:25 GMT 2018
 */

package com.landlord.api.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

import com.landlord.api.ChatMessagesApiController;
import com.landlord.dto.ChatMessageDTO;
import com.landlord.dto.ChatMessageInputDTO;
import com.landlord.services.base.MessageService;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChatMessagesApiController_ESTest extends ChatMessagesApiController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MessageService messageService0 = mock(MessageService.class, new ViolatedAssumptionAnswer());
      ChatMessagesApiController chatMessagesApiController0 = new ChatMessagesApiController(messageService0);
      ChatMessageInputDTO chatMessageInputDTO0 = mock(ChatMessageInputDTO.class, new ViolatedAssumptionAnswer());
      chatMessagesApiController0.createChatMessage(chatMessageInputDTO0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MessageService messageService0 = mock(MessageService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(messageService0).getMessagesByEstateID(anyString());
      ChatMessagesApiController chatMessagesApiController0 = new ChatMessagesApiController(messageService0);
      List<ChatMessageDTO> list0 = chatMessagesApiController0.getMessagesByEstateID("prDP,[J%a&FaGwqW");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChatMessagesApiController chatMessagesApiController0 = new ChatMessagesApiController((MessageService) null);
      ChatMessageInputDTO chatMessageInputDTO0 = mock(ChatMessageInputDTO.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        chatMessagesApiController0.createChatMessage(chatMessageInputDTO0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.api.ChatMessagesApiController", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChatMessagesApiController chatMessagesApiController0 = new ChatMessagesApiController((MessageService) null);
      // Undeclared exception!
      try { 
        chatMessagesApiController0.getMessagesByEstateID((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.api.ChatMessagesApiController", e);
      }
  }
}
