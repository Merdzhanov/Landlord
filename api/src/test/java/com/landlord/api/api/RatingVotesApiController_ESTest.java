/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:19:52 GMT 2018
 */

package com.landlord.api.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.Mockito.mock;

import com.landlord.api.RatingVotesApiController;
import com.landlord.dto.RatingVoteDTO;
import com.landlord.services.base.RatingVoteService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RatingVotesApiController_ESTest extends RatingVotesApiController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RatingVotesApiController ratingVotesApiController0 = new RatingVotesApiController((RatingVoteService) null);
      RatingVoteDTO ratingVoteDTO0 = mock(RatingVoteDTO.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ratingVotesApiController0.createOrUpdateRatingVote(ratingVoteDTO0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.api.RatingVotesApiController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RatingVoteService ratingVoteService0 = mock(RatingVoteService.class, new ViolatedAssumptionAnswer());
      RatingVotesApiController ratingVotesApiController0 = new RatingVotesApiController(ratingVoteService0);
      RatingVoteDTO ratingVoteDTO0 = mock(RatingVoteDTO.class, new ViolatedAssumptionAnswer());
      ratingVotesApiController0.createOrUpdateRatingVote(ratingVoteDTO0);
  }
}
