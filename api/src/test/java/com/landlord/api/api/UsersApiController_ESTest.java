/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 13 12:10:02 GMT 2018
 */

package com.landlord.api.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

import com.landlord.api.UsersApiController;
import com.landlord.dto.UserDTO;
import com.landlord.services.base.UserService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsersApiController_ESTest extends UsersApiController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UsersApiController usersApiController0 = new UsersApiController((UserService) null);
      // Undeclared exception!
      try { 
        usersApiController0.getUserByUsername("T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.landlord.api.UsersApiController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserService userService0 = mock(UserService.class, new ViolatedAssumptionAnswer());
      doReturn((UserDTO) null).when(userService0).getDTOByUserName(anyString());
      UsersApiController usersApiController0 = new UsersApiController(userService0);
      UserDTO userDTO0 = usersApiController0.getUserByUsername("K=f{E.Z0~6}mwA<+2");
      assertNull(userDTO0);
  }
}
